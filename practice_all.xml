<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Monday, February 26, 2018, 10:26 PM -->
<!-- MuClient version 5.06-pre -->

<!-- Plugin "practice_all" generated by Plugin Wizard -->

<muclient>
<plugin
   name="practice_all"
   author="Daak"
   id="5324433cac1ff5c1a5117945"
   language="Lua"
   purpose="Practice all skills to full"
   save_state="y"
   date_written="2018-02-26 22:25:30"
   requires="5.06"
   version="1.0"
   >
<description trim="y">
<![CDATA[
Go to trainer and type: dprac all
This plugin will list practices then do: prac <skill> full
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<aliases>
  <alias
    match="^dprac (?&lt;cmd&gt;.*)$"
    script="prac_start"
    name="prac_start"
    enabled="y" regexp="y" sequence="100" ignore_case="y"
    >
  </alias>
</aliases>

<triggers>
  <trigger
   enabled="n"
   match="^(?&lt;skill&gt;[^\d-]+)(\d|-).*$"
   name="prac_skill"
   script="prac_skill"
   sequence="100"
   regexp="y"
   group="prac_group"
   omit_from_output="n"
  >
  </trigger>
  <trigger
   enabled="n"
   match="^See 'help learned' for better ways to list skill/spell proficiency.$"
   name="prac_end"
   script="prac_end"
   sequence="100"
   regexp="y"
   group="prac_group"
   omit_from_output="n"
  >
  </trigger>
</triggers>

<script>
<![CDATA[

-- require "tprint"

skills_count = 0
skills_found = {}
do_practice = 0

function prac_start (name, line, wildcards)
  local cmd = wildcards.cmd
  if cmd ~= "all" and cmd ~= "list" and cmd ~= "help" then
    Note("Invalid dprac command - try: dprac <all|list|help>")
    return
  end
  if cmd == "help" then
    show_help()
    return
  end
  do_practice = 0
  if cmd == "all" then
    do_practice = 1
  end
  EnableTriggerGroup("prac_group", true)
  skills_count = 0;
  skills_found = {}
  Send("prac")
end -- prac_start

function prac_skill (name, line, wildcards)
  --  Wrath of god              166     1%
  -- Note(wildcards.skill)
  skill = trim(wildcards.skill)
  -- Note(skill)
  -- You have 62 training sessions available.
  -- You have 162 practice sessions available.
  if skill == "You have" then
    return
  end
  table.insert(skills_found, {skillname=skill})
  skills_count = skills_count + 1
end -- prac_skill

function prac_end (name, line, wildcards)
  Note("Loaded " .. skills_count .. " skills to pratice")
  EnableTriggerGroup("prac_group", false)
  -- tprint(skills_found)
  prac_all()
end -- prac_end

function prac_all ()
  if skills_count < 1 then
    Note("No skills to practice.")
    return
  end
  if do_practice == 0 then
    Note("dprac all will practice skills below:")
  end
  for i,v in ipairs(skills_found) do
    if do_practice == 1 then
      Send("prac " .. v.skillname .. " full")
    else
      Note(v.skillname)
    end
  end -- for
end -- prac_all

function show_help ()
  Note("Help for Daak's Practice All:\n")
  Tell(padRight("  all", 8, " "))
  Note(": Practice All available skills")
  Tell(padRight("  list", 8, " "))
  Note(": List All available skills to be practiced")
  Tell(padRight("  help", 8, " "))
  Note(": You're looking at it\n")
  Note("This does plugin doesn't compute required practices (yet?)")
end -- show_help

-- Utils  --

function tableCountItems(ttable)
  local count = 0
  for i,v in pairs(ttable) do
    count = count + 1
  end
  if count == 0 then
    for i,v in ipairs(ttable) do
      count = count + 1
    end
  end
  return count
end

function padRight(text, length, padChar)
  local padding = length - string.len(text)
  for i = 1, padding do
    text = text .. padChar
  end
  return text
end

function trim(s)
  return s:match "^%s*(.-)%s*$"
end

]]>
</script> 

</muclient>
